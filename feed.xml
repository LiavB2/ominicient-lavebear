<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://liavb2.github.io/ominicient-lavebear/feed.xml" rel="self" type="application/atom+xml" /><link href="https://liavb2.github.io/ominicient-lavebear/" rel="alternate" type="text/html" /><updated>2022-11-26T21:26:28-06:00</updated><id>https://liavb2.github.io/ominicient-lavebear/feed.xml</id><title type="html">LB Blogs</title><subtitle>CSP Blogs by LB</subtitle><entry><title type="html">Lists and Dictionaries</title><link href="https://liavb2.github.io/ominicient-lavebear/python/2022/11/26/infoDB-CORRECT.html" rel="alternate" type="text/html" title="Lists and Dictionaries" /><published>2022-11-26T00:00:00-06:00</published><updated>2022-11-26T00:00:00-06:00</updated><id>https://liavb2.github.io/ominicient-lavebear/python/2022/11/26/infoDB-CORRECT</id><author><name></name></author><category term="Python" /><summary type="html"><![CDATA[Lists and Dictionaries]]></summary></entry><entry><title type="html">3.1-3.2 Group Lesson</title><link href="https://liavb2.github.io/ominicient-lavebear/markdown/2022/11/26/GroupLesson.html" rel="alternate" type="text/html" title="3.1-3.2 Group Lesson" /><published>2022-11-26T00:00:00-06:00</published><updated>2022-11-26T00:00:00-06:00</updated><id>https://liavb2.github.io/ominicient-lavebear/markdown/2022/11/26/GroupLesson</id><author><name></name></author><category term="Markdown" /><summary type="html"><![CDATA[Markdown post of the group lesson by Liav Bar, Noor B, Steven W, Nathan C, Ederick W.]]></summary></entry><entry><title type="html">My Portion of the Group Lesson</title><link href="https://liavb2.github.io/ominicient-lavebear/markdown/2022/11/22/MyPartOfTheLesson.html" rel="alternate" type="text/html" title="My Portion of the Group Lesson" /><published>2022-11-22T00:00:00-06:00</published><updated>2022-11-22T00:00:00-06:00</updated><id>https://liavb2.github.io/ominicient-lavebear/markdown/2022/11/22/MyPartOfTheLesson</id><author><name></name></author><category term="Markdown" /><summary type="html"><![CDATA[Markdown post of my portion of the group lesson.]]></summary></entry><entry><title type="html">Lessonhacks</title><link href="https://liavb2.github.io/ominicient-lavebear/2022/11/18/lessonhacks.ipynb" rel="alternate" type="text/html" title="Lessonhacks" /><published>2022-11-18T00:00:00-06:00</published><updated>2022-11-18T00:00:00-06:00</updated><id>https://liavb2.github.io/ominicient-lavebear/2022/11/18/lessonhacks</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "markdown", "metadata": {}, "source": [ "# Collegeboard APCSP 3.1.2 lesson\n", "> title is self-explanatory\n", "- toc: true\n", "- badges: true \n", "- comments: true \n", "- title: 3.1.2 lesson" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# Learning objective for 3.1.2:\n", "Determine the value of a variable as a result of an assignment\n", "- done through looking at how we can use the assignment operator\n", " " ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# Note:\n", "Collegeboard uses \n", "\n", " \n", " \n", " Prev\n", " Next\n", " \n", " \n", "\n", "\n", "\n", "" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# Recap:\n", "- We learned what is a assignment operator\n", "- We learned how to use the assignment operator\n", "- We learned how to store a value inside a variable using the assignment operator\n", "- We experimented with a few examples " ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# Hacks: \n", "Answer these:\n", "- In your **own** words, briefly explain by writing down what an assignment operator is\n", "- In Collegeboard pseudocode, what symbol is used to assign values to variables?\n", "- A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22?" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# Hacks:\n", "Copy the all the html code into a markdown file and run your local server. You will then see a decimal to binary converter near the html code. The problem is that it is not converting the decimal to binary. This is because the variables are not defined properly and it is your job to use the information learned today to fix the converter. **Don't change the css**\n", "\n", "# Bonus (optional):\n", "There's more than one way to define the variable. List two ways to do it." ] }, { "cell_type": "code", "execution_count": null, "metadata": { "vscode": { "languageId": "html" } }, "outputs": [], "source": [ "\n", " \n", " Decimal to Binary converter\n", " \n", " \n", " \n", " Decimal:\n", " \n", " \n", " Binary:\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " " ] } ], "metadata": { "kernelspec": { "display_name": "Python 3.9.12 ('base')", "language": "python", "name": "python3" }, "language_info": { "codemirror_mode": { "name": "ipython", "version": 3 }, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.9.12" }, "orig_nbformat": 4, "vscode": { "interpreter": { "hash": "9ad226fb37a9fe92963762e2f5cdd2c1c77b376a6660d6f587a643de3c6682f8" } } }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Tools Check</title><link href="https://liavb2.github.io/ominicient-lavebear/markdown/2022/11/17/ToolsCheck.html" rel="alternate" type="text/html" title="Tools Check" /><published>2022-11-17T00:00:00-06:00</published><updated>2022-11-17T00:00:00-06:00</updated><id>https://liavb2.github.io/ominicient-lavebear/markdown/2022/11/17/ToolsCheck</id><author><name></name></author><category term="Markdown" /><summary type="html"><![CDATA[Blog about the tools check for tri 2]]></summary></entry></feed>